/**
 * Dynamic Positioning Utility System
 * 
 * A class-only approach to dynamic positioning using encoded class names
 * that define the position values directly in the class name.
 */

/* Base positioning classes */
.pos-relative { position: relative; }
.pos-absolute { position: absolute; }
.pos-fixed { position: fixed; }
.pos-sticky { position: sticky; }
.pos-static { position: static; }

/* Dynamic top positions */
.top-0 { top: 0; }
[class*="top-"] { position: var(--pos-type, relative); }
.top-0\.1 { top: 0.1rem; }
.top-0\.2 { top: 0.2rem; }
.top-0\.3 { top: 0.3rem; }
.top-0\.4 { top: 0.4rem; }
.top-0\.5 { top: 0.5rem; }
.top-0\.6 { top: 0.6rem; }
.top-0\.7 { top: 0.7rem; }
.top-0\.8 { top: 0.8rem; }
.top-0\.9 { top: 0.9rem; }
.top-1 { top: 1rem; }
.top-1\.5 { top: 1.5rem; }
.top-2 { top: 2rem; }
.top-2\.5 { top: 2.5rem; }
.top-3 { top: 3rem; }
.top-3\.5 { top: 3.5rem; }
.top-4 { top: 4rem; }
.top-5 { top: 5rem; }
.top-6 { top: 6rem; }
.top-7 { top: 7rem; }
.top-8 { top: 8rem; }
.top-9 { top: 9rem; }
.top-10 { top: 10rem; }

/* Dynamic right positions */
.right-0 { right: 0; }
[class*="right-"] { position: var(--pos-type, relative); }
.right-0\.1 { right: 0.1rem; }
.right-0\.2 { right: 0.2rem; }
.right-0\.3 { right: 0.3rem; }
.right-0\.4 { right: 0.4rem; }
.right-0\.5 { right: 0.5rem; }
.right-0\.6 { right: 0.6rem; }
.right-0\.7 { right: 0.7rem; }
.right-0\.8 { right: 0.8rem; }
.right-0\.9 { right: 0.9rem; }
.right-1 { right: 1rem; }
.right-1\.5 { right: 1.5rem; }
.right-2 { right: 2rem; }
.right-2\.5 { right: 2.5rem; }
.right-3 { right: 3rem; }
.right-3\.5 { right: 3.5rem; }
.right-4 { right: 4rem; }
.right-5 { right: 5rem; }
.right-6 { right: 6rem; }
.right-7 { right: 7rem; }
.right-8 { right: 8rem; }
.right-9 { right: 9rem; }
.right-10 { right: 10rem; }

/* Dynamic bottom positions */
.bottom-0 { bottom: 0; }
[class*="bottom-"] { position: var(--pos-type, relative); }
.bottom-0\.1 { bottom: 0.1rem; }
.bottom-0\.2 { bottom: 0.2rem; }
.bottom-0\.3 { bottom: 0.3rem; }
.bottom-0\.4 { bottom: 0.4rem; }
.bottom-0\.5 { bottom: 0.5rem; }
.bottom-0\.6 { bottom: 0.6rem; }
.bottom-0\.7 { bottom: 0.7rem; }
.bottom-0\.8 { bottom: 0.8rem; }
.bottom-0\.9 { bottom: 0.9rem; }
.bottom-1 { bottom: 1rem; }
.bottom-1\.5 { bottom: 1.5rem; }
.bottom-2 { bottom: 2rem; }
.bottom-2\.5 { bottom: 2.5rem; }
.bottom-3 { bottom: 3rem; }
.bottom-3\.5 { bottom: 3.5rem; }
.bottom-4 { bottom: 4rem; }
.bottom-5 { bottom: 5rem; }
.bottom-6 { bottom: 6rem; }
.bottom-7 { bottom: 7rem; }
.bottom-8 { bottom: 8rem; }
.bottom-9 { bottom: 9rem; }
.bottom-10 { bottom: 10rem; }

/* Dynamic left positions */
.left-0 { left: 0; }
[class*="left-"] { position: var(--pos-type, relative); }
.left-0\.1 { left: 0.1rem; }
.left-0\.2 { left: 0.2rem; }
.left-0\.3 { left: 0.3rem; }
.left-0\.4 { left: 0.4rem; }
.left-0\.5 { left: 0.5rem; }
.left-0\.6 { left: 0.6rem; }
.left-0\.7 { left: 0.7rem; }
.left-0\.8 { left: 0.8rem; }
.left-0\.9 { left: 0.9rem; }
.left-1 { left: 1rem; }
.left-1\.5 { left: 1.5rem; }
.left-2 { left: 2rem; }
.left-2\.5 { left: 2.5rem; }
.left-3 { left: 3rem; }
.left-3\.5 { left: 3.5rem; }
.left-4 { left: 4rem; }
.left-5 { left: 5rem; }
.left-6 { left: 6rem; }
.left-7 { left: 7rem; }
.left-8 { left: 8rem; }
.left-9 { left: 9rem; }
.left-10 { left: 10rem; }

/* Negative positioning classes */
.top-n0\.1 { top: -0.1rem; }
.top-n0\.5 { top: -0.5rem; }
.top-n1 { top: -1rem; }
.top-n2 { top: -2rem; }
.top-n3 { top: -3rem; }
.top-n5 { top: -5rem; }

.right-n0\.1 { right: -0.1rem; }
.right-n0\.5 { right: -0.5rem; }
.right-n1 { right: -1rem; }
.right-n2 { right: -2rem; }
.right-n3 { right: -3rem; }
.right-n5 { right: -5rem; }

.bottom-n0\.1 { bottom: -0.1rem; }
.bottom-n0\.5 { bottom: -0.5rem; }
.bottom-n1 { bottom: -1rem; }
.bottom-n2 { bottom: -2rem; }
.bottom-n3 { bottom: -3rem; }
.bottom-n5 { bottom: -5rem; }

.left-n0\.1 { left: -0.1rem; }
.left-n0\.5 { left: -0.5rem; }
.left-n1 { left: -1rem; }
.left-n2 { left: -2rem; }
.left-n3 { left: -3rem; }
.left-n5 { left: -5rem; }

/* Percentage-based positioning */
.top-10p { top: 10%; }
.top-20p { top: 20%; }
.top-25p { top: 25%; }
.top-30p { top: 30%; }
.top-40p { top: 40%; }
.top-50p { top: 50%; }
.top-60p { top: 60%; }
.top-70p { top: 70%; }
.top-75p { top: 75%; }
.top-80p { top: 80%; }
.top-90p { top: 90%; }
.top-100p { top: 100%; }

.right-10p { right: 10%; }
.right-20p { right: 20%; }
.right-25p { right: 25%; }
.right-30p { right: 30%; }
.right-40p { right: 40%; }
.right-50p { right: 50%; }
.right-60p { right: 60%; }
.right-70p { right: 70%; }
.right-75p { right: 75%; }
.right-80p { right: 80%; }
.right-90p { right: 90%; }
.right-100p { right: 100%; }

.bottom-10p { bottom: 10%; }
.bottom-20p { bottom: 20%; }
.bottom-25p { bottom: 25%; }
.bottom-30p { bottom: 30%; }
.bottom-40p { bottom: 40%; }
.bottom-50p { bottom: 50%; }
.bottom-60p { bottom: 60%; }
.bottom-70p { bottom: 70%; }
.bottom-75p { bottom: 75%; }
.bottom-80p { bottom: 80%; }
.bottom-90p { bottom: 90%; }
.bottom-100p { bottom: 100%; }

.left-10p { left: 10%; }
.left-20p { left: 20%; }
.left-25p { left: 25%; }
.left-30p { left: 30%; }
.left-40p { left: 40%; }
.left-50p { left: 50%; }
.left-60p { left: 60%; }
.left-70p { left: 70%; }
.left-75p { left: 75%; }
.left-80p { left: 80%; }
.left-90p { left: 90%; }
.left-100p { left: 100%; }

/* Z-index utilities */
.z-0 { z-index: 0; }
.z-1 { z-index: 1; }
.z-2 { z-index: 2; }
.z-3 { z-index: 3; }
.z-4 { z-index: 4; }
.z-5 { z-index: 5; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }
.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }
.z-100 { z-index: 100; }
.z-auto { z-index: auto; }
.z-n1 { z-index: -1; }

/* Auto positioning for edge alignment */
.top-auto { top: auto; }
.right-auto { right: auto; }
.bottom-auto { bottom: auto; }
.left-auto { left: auto; }

/* Common positioning patterns */
.center-xy {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.center-x {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.center-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/* Full coverage positioning */
.cover-all {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* Viewport positioning utilities */
.viewport-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.viewport-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

/* Corner positioning */
.corner-top-left {
  position: absolute;
  top: 0;
  left: 0;
}

.corner-top-right {
  position: absolute;
  top: 0;
  right: 0;
}

.corner-bottom-left {
  position: absolute;
  bottom: 0;
  left: 0;
}

.corner-bottom-right {
  position: absolute;
  bottom: 0;
  right: 0;
}

/* Setting position type for position classes */
.pos-type-relative { --pos-type: relative; }
.pos-type-absolute { --pos-type: absolute; }
.pos-type-fixed { --pos-type: fixed; }
.pos-type-sticky { --pos-type: sticky; }

/* Viewport unit positions (vh/vw) */
.top-10vh { top: 10vh; }
.top-20vh { top: 20vh; }
.top-30vh { top: 30vh; }
.top-40vh { top: 40vh; }
.top-50vh { top: 50vh; }
.top-60vh { top: 60vh; }
.top-70vh { top: 70vh; }
.top-80vh { top: 80vh; }
.top-90vh { top: 90vh; }
.top-100vh { top: 100vh; }

.left-10vw { left: 10vw; }
.left-20vw { left: 20vw; }
.left-30vw { left: 30vw; }
.left-40vw { left: 40vw; }
.left-50vw { left: 50vw; }
.left-60vw { left: 60vw; }
.left-70vw { left: 70vw; }
.left-80vw { left: 80vw; }
.left-90vw { left: 90vw; }
.left-100vw { left: 100vw; }

/* Pixel-based positions for fine tuning */
.top-1px { top: 1px; }
.top-2px { top: 2px; }
.top-5px { top: 5px; }
.top-10px { top: 10px; }
.top-15px { top: 15px; }
.top-20px { top: 20px; }
.top-25px { top: 25px; }
.top-30px { top: 30px; }
.top-40px { top: 40px; }
.top-50px { top: 50px; }
.top-100px { top: 100px; }

.left-1px { left: 1px; }
.left-2px { left: 2px; }
.left-5px { left: 5px; }
.left-10px { left: 10px; }
.left-15px { left: 15px; }
.left-20px { left: 20px; }
.left-25px { left: 25px; }
.left-30px { left: 30px; }
.left-40px { left: 40px; }
.left-50px { left: 50px; }
.left-100px { left: 100px; }

/* Class-based generator function - for programmatic generation of additional values */
/* This would be used with a preprocessor or JavaScript to generate additional values */
/*
function generatePositionClasses(property, unit, values) {
  values.forEach(value => {
    let className = `.${property}-${value.toString().replace('.', '\\.')}${unit}`;
    let rule = `${property}: ${value}${unit};`;
    // Add to stylesheet
  });
}
*/
