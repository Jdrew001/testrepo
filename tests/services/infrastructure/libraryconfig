import { TestBed } from '@angular/core/testing';
import { LibraryConfigService } from './library-config.service';
import { LibraryConfig } from '../../model/configs/library.config';

describe('LibraryConfigService', () => {
  let service: LibraryConfigService;
  let mockLibraryConfig: LibraryConfig;

  beforeEach(() => {
    mockLibraryConfig = {
      // Add properties that LibraryConfig has in your implementation
      name: 'Test Library',
      version: '1.0.0'
    } as LibraryConfig;

    TestBed.configureTestingModule({
      providers: [LibraryConfigService]
    });
    
    service = TestBed.inject(LibraryConfigService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  it('should set and retrieve library config', () => {
    // Initially the config should be undefined or default value
    expect(service.libConfig).not.toEqual(mockLibraryConfig);

    // Set the config
    service.libConfig = mockLibraryConfig;

    // Should now have the config we set
    expect(service.libConfig).toEqual(mockLibraryConfig);
  });

  it('should return the same instance of the config', () => {
    // Set the config
    service.libConfig = mockLibraryConfig;

    // Should return the same instance
    expect(service.libConfig).toBe(mockLibraryConfig);
  });

  it('should maintain references properly', () => {
    // Set the config
    service.libConfig = mockLibraryConfig;
    
    // Get a reference
    const configRef = service.libConfig;
    
    // Modify the reference
    configRef.name = 'Modified Name';
    
    // The change should be reflected in the service
    expect(service.libConfig.name).toBe('Modified Name');
  });
});